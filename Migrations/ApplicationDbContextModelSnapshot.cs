// <auto-generated />
using EnsaioApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnsaioApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnsaioApp.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("ClienteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("EnsaioApp.Models.Ensaio", b =>
                {
                    b.Property<int>("EnsaioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnsaioId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.HasKey("EnsaioId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ensaio");
                });

            modelBuilder.Entity("EnsaioApp.Models.ResistenciaIsolamento", b =>
                {
                    b.Property<int>("ResistenciaIsolamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResistenciaIsolamentoId"));

                    b.Property<int>("EnsaioId")
                        .HasColumnType("int");

                    b.Property<string>("LeituraAtBt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeituraAtMassa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeituraBtMassa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TensaoDoMegometro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResistenciaIsolamentoId");

                    b.HasIndex("EnsaioId")
                        .IsUnique();

                    b.ToTable("ResistenciaIsolamento");
                });

            modelBuilder.Entity("EnsaioApp.Models.ResistenciaOhmicaEnrolamentos", b =>
                {
                    b.Property<int>("ResistenciaOhmicaEnrolamentosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResistenciaOhmicaEnrolamentosId"));

                    b.Property<string>("EnrolTi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnrolTs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnsaioId")
                        .HasColumnType("int");

                    b.Property<string>("H1H3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("H1h2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("H2H3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperaturaAmbiente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X1x2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X1x3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X2x3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResistenciaOhmicaEnrolamentosId");

                    b.HasIndex("EnsaioId")
                        .IsUnique();

                    b.ToTable("ResistenciaOhmicaEnrolamentos");
                });

            modelBuilder.Entity("EnsaioApp.Models.Rotina", b =>
                {
                    b.Property<int>("RotinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RotinaId"));

                    b.Property<string>("AtLigadaEmKv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BtLigadaEmKv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrentAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrentBt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataFabricacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Derivacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnsaioId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fases")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ligacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassaKg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Potencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TensaoAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TensaoBt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RotinaId");

                    b.HasIndex("EnsaioId")
                        .IsUnique();

                    b.ToTable("Rotina");
                });

            modelBuilder.Entity("EnsaioApp.Models.Ensaio", b =>
                {
                    b.HasOne("EnsaioApp.Models.Cliente", "Cliente")
                        .WithMany("Ensaios")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("EnsaioApp.Models.ResistenciaIsolamento", b =>
                {
                    b.HasOne("EnsaioApp.Models.Ensaio", "Ensaio")
                        .WithOne("ResistenciaIsolamento")
                        .HasForeignKey("EnsaioApp.Models.ResistenciaIsolamento", "EnsaioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ensaio");
                });

            modelBuilder.Entity("EnsaioApp.Models.ResistenciaOhmicaEnrolamentos", b =>
                {
                    b.HasOne("EnsaioApp.Models.Ensaio", "Ensaio")
                        .WithOne("ResistenciaOhmicaEnrolamentos")
                        .HasForeignKey("EnsaioApp.Models.ResistenciaOhmicaEnrolamentos", "EnsaioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ensaio");
                });

            modelBuilder.Entity("EnsaioApp.Models.Rotina", b =>
                {
                    b.HasOne("EnsaioApp.Models.Ensaio", "Ensaio")
                        .WithOne("Rotina")
                        .HasForeignKey("EnsaioApp.Models.Rotina", "EnsaioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ensaio");
                });

            modelBuilder.Entity("EnsaioApp.Models.Cliente", b =>
                {
                    b.Navigation("Ensaios");
                });

            modelBuilder.Entity("EnsaioApp.Models.Ensaio", b =>
                {
                    b.Navigation("ResistenciaIsolamento")
                        .IsRequired();

                    b.Navigation("ResistenciaOhmicaEnrolamentos")
                        .IsRequired();

                    b.Navigation("Rotina")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
